plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'base'
}

group = 'com.chris.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.qlrm:qlrm:2.0.2'
    runtimeOnly 'com.h2database:h2'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}" // Jar name without version info
}

bootRun {
    String env = System.properties['spring.profiles.active']
    println "* Specified active profile: [" + env + "]"
    systemProperty "spring.profiles.active", env
}

// Build configuration
ext {
    profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
    zipPackagingDirPath = "$rootDir/_dist" // output directory for deployment asset zip bundle
    elasticBeansTalkConfigAsset = "./config" // elastic beansTalk config files in .ebextensions directory
}

task showBuildProfile {
    println "* Build Mode: ${profile}" // e.g., -Pprofile=dev (Specify which application-[env].yml profile should be included.
}

// Build Mode 1 [For BeansTalk Console Manual Deploy] zip package includes complied JAR output file and all config file in ./config directory
// Command Usage: ./gradlew clean buildZipArtifact
task buildZipArtifact (type: Zip, dependsOn: ['cleanDist','build']) {

//    destinationDirectory = file("$buildDir/dist") // output directory for deployment asset zip bundle
    destinationDirectory = file(zipPackagingDirPath) // output directory for deployment asset zip bundle

    from bootJar // executable complied .jar output from build
    from file(elasticBeansTalkConfigAsset) // elastic beansTalk config files in .ebextensions directory + Procfile

    doLast {
        println "Deployable ZIP Artifact bundle file: " + zipPackagingDirPath + "/" + archiveFileName.get() // display name of output zip bundle file for deployment
    }
}
// Build Mode 2 [For BeansTalk CodePipeline Deploy] it doesn't zip the out artifacts like .jar .ebextensions directory and inside .config files
// Command Usage: ./gradlew clean buildNonZipArtifact
task buildNonZipArtifact(type: Copy, dependsOn: ['cleanDist','build']) {

    from bootJar // executable complied .jar output from build
    from file(elasticBeansTalkConfigAsset) // elastic beansTalk config files in .ebextensions directory + Procfile

    into file(zipPackagingDirPath)

    doLast{
        FileTree tree = fileTree(zipPackagingDirPath)
        tree.each {
            println it.name
        }
    }
}

// clean up '_dist' Artifacts output directory before starting build
task cleanDist(type: Delete) {
    delete file(zipPackagingDirPath)
    followSymlinks = true
    println "Clean up ${zipPackagingDirPath} output directory..."
}